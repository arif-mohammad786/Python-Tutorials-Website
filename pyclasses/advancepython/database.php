<?php
    define("TITLE",'database in python');
    define("DESCRIPTION",'python database explained very easily');
    define("KEYWORD",'database');
    include("../corepython/header.php");
    include("sidebar.php");
?>

<div class="col-xl-7  mt-5 offset-1 scroller position-relative shadow-lg" id="print" >
    <div >
        <div class="mr-5">

        <h3 style="text-decoration:underline;" class="mt-3 text-center text-secondary">Database in python</h3>
        <h6 class="mt-4 ml-5">Before going ahead of this we should be familiar with database knowledge like MYSQL .</h6>
        <h6 class="mt-4 ml-5">Database is used to store the data of an application .One of most common databases
        MYSQL is used in python.</h6>
        <h6 class="mt-4 ml-5">To connect with mysql we use submodule of mysql module i.e. <span class="text-primary">connector</span>.
        Using <span class="text-primary">connect()</span> function which gives connection object.</h6>

                <div class="jumbotron ml-5 mt-5 text-success">
                    <div style="background-color:white;">
                    <h6 style="text-decoration:underline;">Example:</h6>
                    <h6 >import mysql.connector</h6>
                    <h6 >cnn=mysql.connector.connect(user,<br>
                    password,host,database)</h6>
                    </div>
                </div>

            <h5 style="text-decoration:underline;" class="mt-3  text-secondary">To check connection</h5>
            <h6 class="mt-4 ml-5 text-primary">conn<b>.</b>is_connected()</h6>
            <h6 class="mt-4 ml-5 ">Returns True if connected else False.</h6>

            <h5 style="text-decoration:underline;" class="mt-3  text-secondary">To close connection</h5>
            <h6 class="mt-4 ml-5 text-primary">conn<b>.</b>close()</h6>

            <h5 style="text-decoration:underline;" class="mt-3  text-secondary">cursor() method</h5>
            <h6 class="mt-4 ml-5">The method is used to create cursor class object .</h6>
            <h6 class="mt-4 ml-5">We need cursor object so we can call <span class="text-primary">execute()</span>  method.</h6>
            <h6 class="mt-4 ml-5">syntax:</h6>
            <h6 class=" ml-5 text-primary">cursor_object=connection_object.cursor()</h6>

            <h5 style="text-decoration:underline;" class="mt-3  text-secondary">execute() method</h5>
            <h6 class="mt-4 ml-5">To execute sql query with cursor object.</h6>
            <h6 class="mt-4 ml-5">syntax:</h6>
            <h6 class=" ml-5 text-primary">cursor_obj.execute(sql query , param=None,Multi=False)</h6>

            <h6 class="mt-4 ml-5">To close cursor object</h6>
            <h6 class=" ml-5 text-primary">cursor_obj.close()</h6>

            <h5 style="text-decoration:underline;" class="mt-3  text-secondary">commit() method</h5>
            <h6 class="mt-4 ml-5">This method is used to save iserted row in table.It is required to use it 
            otherwise there will not be any change in database.</h6>
            <h6 class="mt-4 ml-5">example:</h6>
            <h6 class=" ml-5 text-primary">conn.commit()</h6>

            <h5 style="text-decoration:underline;" class="mt-3  text-secondary">rollback() method</h5>
            <h6 class="mt-4 ml-5">This method is used to un-save row if there is an error.</h6>
            <h6 class="mt-4 ml-5">syntax:</h6>
            <h6 class=" ml-5 text-primary">connection_obj.rollback()</h6>

                <div class="jumbotron ml-5 mt-5 text-success">
                    <div style="background-color:white;">
                    <h6 class="pl-5" style="text-decoration:underline;">Example:</h6>
                    <h6 class=" ml-5">myc=conn.cursor()</h6>
                    <h6 class=" ml-5">try :</h6>
                    <h6 class=" ml-5"><span class="pl-5">myc.execute(sql)</span></h6>
                    <h6 class=" ml-5"><span class="pl-5">conn.commit()</span></h6>
                    <h6 class=" ml-5">except :</h6>
                    <h6 class=" ml-5"><span class="pl-5">conn.rollback()</span></h6>
                    </div>
                </div>

                <h6 class=" ml-5"><span class="text-primary">myc.rowcount</span> can be used to count the 
                number of rows affected (inserted or updated or deleted).</h6>


                <h5 style="text-decoration:underline;" class="mt-3  text-secondary">lastrowid property</h5>
                <h6 class="mt-4 ml-5">This is read-only property returns the value generated by an auto-increment 
                column by the previous insertor update statement or none when there is no such value available.</h6>
                <h6 class="mt-4 ml-5">If we insert one row it will return the auto-incremented value of that row.</h6>
                <h6 class=" ml-5 ">If we insert multiple row it will return auto-incremented value of first record e.g myc.lastrowid</h6>


                <h5 style="text-decoration:underline;" class="mt-3  text-secondary">fetchone() method</h5>
                <h6 class="mt-4 ml-5">This method retrieves the next row of a query result and returns a sibgle 
                sequence or None if no more rows are available .</h6>
                <h6 class="mt-4 ml-5">You must fetch all rows for the current query before executing new statement
                using same connection.</h6>


                <div class="jumbotron ml-5 mt-5 text-success">
                    <div style="background-color:white;">
                    <h6 class="pl-5" style="text-decoration:underline;">Example:</h6>
                    <h6 class=" ml-5">sql="select * from table_name"</h6>
                    <h6 class=" ml-5">myc.execute(sql)</h6>
                    <h6 class=" ml-5">row=myc.fetchone()</h6>
                    <h6 class=" ml-5">while row is not None :</h6>
                    <h6 class=" ml-5"><span class="pl-5">print(row)</span></h6>
                    <h6 class=" ml-5"><span class="pl-5">row=myc.fetchone()</span></h6>
                    </div>
                </div>
                <h6 class="mt-4 ml-5">In cursor object records get stored in tuple form.</h6>


                <h5 style="text-decoration:underline;" class="mt-3  text-secondary">fetchall() method</h5>
                <h6 class="mt-4 ml-5">This method fetches all (or all remaining) rows of a query result set 
                and returns a list of tuples (tuples are records) .</h6>
                <h6 class="mt-4 ml-5">If no more rows are available it returns an empty list.</h6>
                <h6 class="mt-4 ml-5">You must fetch all the rows for the current query before 
                executing new statement using same connection.</h6>


                <div class="jumbotron ml-5 mt-5 text-success">
                    <div style="background-color:white;">
                    <h6 class="pl-5" style="text-decoration:underline;">Example:</h6>
                    <h6 class=" ml-5">sql="select * from table_name"</h6>
                    <h6 class=" ml-5">myc.execute(sql)</h6>
                    <h6 class=" ml-5">rows=myc.fetchall()</h6>
                    <h6 class=" ml-5">while row in rows :</h6>
                    <h6 class=" ml-5"><span class="pl-5">print(row)</span></h6>
                    <h6 class="mt-4 ml-5"> #  row is the complete one row of the table.and rows is the list of rows.</h6>

                    </div>
                </div>


                <h3 style="text-decoration:underline;" class="mt-3 text-center text-secondary">Parameterized Query</h3>
                <h6 class="mt-4 ml-5">A parameterized query is a query which can use the formate or pyformate 
                parameterization style for parameters and the parameters values supplied at execution.</h6>
                <h6 class="mt-4 ml-5">we can use %s and $(key)s formate style.</h6>
                <h6 class="mt-4 ml-5">%s is used while using tuple parameters and %(key)s is used while using 
                dictionary parameters. </h6>

                <h4 style="text-decoration:underline;" class="mt-3  text-secondary">Tuple parameters</h4>
                <div class="jumbotron ml-5 mt-5 text-success">
                    <div style="background-color:white;">
                    <h6 style="text-decoration:underline;">Example:</h6>
                    <h6 >sql="insert into student(name,roll,fees)values(%s,%s,%s)"</h6>
                    <h6 >myc=conn.cursor()</h6>
                    <h6 >myc.execute(sql,('raj',23,5000))</h6>
                    </div>
                </div>

                <h4 style="text-decoration:underline;" class="mt-3  text-secondary">Dictionary parameters</h4>
                <div class="jumbotron ml-5 mt-5 text-success">
                    <div style="background-color:white;">
                    <h6 class="pl-5" style="text-decoration:underline;">Example:</h6>
                    <h6 class=" ml-5">sql="insert into student(name,roll,fees)values(%(name)s,%(roll)s,%(fees)s)"</h6>
                    <h6 class=" ml-5">myc=conn.cursor()</h6>
                    <h6 class=" ml-5">myc.execute(sql,{'name':'karan','roll':23,'fees':3000})</h6>
                    </div>
                </div>


                <h4 style="text-decoration:underline;" class="mt-3  text-secondary">To insert multiple rows using 
                parameterization with tuple formate</h4>
                <div class="jumbotron ml-5 mt-5 text-success">
                    <div style="background-color:white;">
                    <h6 style="text-decoration:underline;">Example:</h6>
                    <h6 >sql="insert into student(name,roll,fees)values(%s,%s,%s)"</h6>
                    <h6 >param=[('jai',100,2000),('vinay',101,3000),('vikash',102,4000)]</h6>
                    <h6 >myc=conn.cursor()</h6>
                    <h6 >myc.executemany(sql,param)</h6>
                    <h6 >conn.commit()</h6>
                    <h6 ><span class="text-primary"> #  executemany()</span> method is used for multiple insertion.</h6>
                    </div>
                </div>
                

                <h4 style="text-decoration:underline;" class="mt-3  text-secondary">Input from user with tuple formate</h4>
                <div class="jumbotron ml-5 mt-5 text-success">
                    <div style="background-color:white;">
                    <h6 style="text-decoration:underline;">Example:</h6>
                    <h6 >sql="insert into student(name,roll,fees)values(%s,%s,%s)"</h6>
                    <h6 >myc=conn.cursor()</h6>
                    <h6 >nm,r,f=input("enter values").split(',')</h6>
                    <h6 >param=(nm,r,f)</h6>
                    <h6 >try :</h6>
                    <h6 ><span class="pl-5">myc.execute(sql,param)</span></h6>
                    <h6 ><span class="pl-5">conn.commit()</span></h6>
                    <h6 >except :</h6>
                    <h6 ><span class="pl-5">conn.rollback()</span></h6>
                    </div>
                </div>


                <h4 style="text-decoration:underline;" class="mt-3  text-secondary">To insert a row using parameterization
                with dictionary formate</h4>
                <div class="jumbotron ml-5 mt-5 text-success">
                    <div style="background-color:white;">
                    <h6 class="pl-5" style="text-decoration:underline;">Example:</h6>
                    <h6 class=" ml-5">sql="insert into student(name,roll,fees)values(%(name)s,%(roll)s,%(fees)s)"</h6>
                    <h6 class=" ml-5">myc=conn.cursor()</h6>
                    <h6 class=" ml-5">param={'name':'prem','roll':100,'fees':20000}</h6>
                    <h6 class=" ml-5">try :</h6>
                    <h6 class=" ml-5"><span class="pl-5">myc.execute(sql,param)</span></h6>
                    <h6 class=" ml-5"><span class="pl-5">conn.commit()</span></h6>
                    <h6 class=" ml-5">except :</h6>
                    <h6 class=" ml-5"><span class="pl-5">conn.rollback()</span></h6>
                    </div>
                </div>


                <h4 style="text-decoration:underline;" class="mt-3  text-secondary">Input from user with dictionary formate</h4>
                <div class="jumbotron ml-5 mt-5 text-success">
                    <div style="background-color:white;">
                    <h6 class="pl-5" style="text-decoration:underline;">Example:</h6>
                    <h6 class=" ml-5">sql="insert into student(name,roll,fees)values(%(name)s,%(roll)s,%(fees)s)"</h6>
                    <h6 class=" ml-5">myc=conn.cursor()</h6>
                    <h6 class=" ml-5">nm,r,f=input("enter values").split(',')</h6>
                    <h6 class=" ml-5">param=('name':nm,'roll':r,'fees':f)</h6>
                    <h6 class=" ml-5">try :</h6>
                    <h6 class=" ml-5"><span class="pl-5">myc.execute(sql,param)</span></h6>
                    <h6 class=" ml-5"><span class="pl-5">conn.commit()</span></h6>
                    <h6 class=" ml-5">except :</h6>
                    <h6 class=" ml-5"><span class="pl-5">conn.rollback()</span></h6>
                    </div>
                </div>


           <!-- <div >
                <form action="" class="mt-5">
                    <a href="exceptionhandling.php" class="btn btn-primary mb-3"style="margin-left:280px;" >PREV</a>
                </form>
            </div>-->

        </div>
    </div> 

                <div class="col-sm-12 text-center">
                <div>
                    <form action="">
                        <a href="exceptionhandling.php" class="btn btn-primary mb-3 ml-5">PREV</a>
                    </form>
                </div>
                </div> 

</div>
    


<?php
    include("../corepython/footer.php");
?>